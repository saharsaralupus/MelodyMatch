@using Microsoft.AspNetCore.Components.Authorization
@using Orquesta.Shared.Entities
@using Orquesta.WEB.Repositories
@using Orquesta.WEB.Shared
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.0/font/bootstrap-icons.min.css" rel="stylesheet">
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">   
        <a class="navbar-brand" href="#">
            <img src="https://i.ibb.co/Df834Nh/logo.jpg" alt="Logo" style="height: 55px; width: 190px">
        </a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <AuthorizeView Roles="UserContratante">
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="reservacion" style="line-height: 1.5;">
                        <i class="bi bi-hand-index-fill" aria-hidden="true" style="line-height: inherit;"></i> Reservación
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@PerfilUrl" style="line-height: 1.5;">
                        <i class="bi bi-hand-index-fill" aria-hidden="true" style="line-height: inherit;"></i> Perfil
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>

        <AuthorizeView Roles="Admin">
            <Authorized>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="contratante" style="line-height: 1.5;">
                        <i class="bi bi-people-fill" aria-hidden="true"></i> Contratante
                    </NavLink>
                </div>


                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="representante" style="line-height: 1.5;">
                        <i class="bi bi-briefcase-fill" aria-hidden="true"></i> Representante
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="agrupacion" style="line-height: 1.5;">
                        <i class="bi bi-vinyl-fill" aria-hidden="true" style="line-height: inherit;"></i> Agrupación
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="generoMusical" style="line-height: 1.5;">
                        <i class="bi bi-boombox" aria-hidden="true" style="line-height: inherit;"></i> Género Musical
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="integrante" style="line-height: 1.5;">
                        <i class="bi bi-person-check-fill" aria-hidden="true" style="line-height: inherit;"></i> Integrante
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="agrupacionGenero" style="line-height: 1.5;">
                        <i class="bi bi-music-note-beamed" aria-hidden="true" style="line-height: inherit;"></i> Agrupacion y Género
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="users" style="line-height: 1.5;">
                        <span class="bi bi-person-check-fill" aria-hidden="true" style="line-height: inherit;"></span> Administrar Usuarios
                    </NavLink>
                </div>

            </Authorized>
        </AuthorizeView>



    </nav>
</div>

@code {
    public Representante representante;
    public List<Representante> Representantes { get; set; }
    public Contratante contratante;
    public List<Contratante> Contratantes { get; set; }
    public List<User> Users { get; set; }
    private string Documento;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; } = null!;

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private string PerfilUrl;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
    }

    private async Task LoadAsync()
    {
        var authenticationState = await authenticationStateTask;
        var user = authenticationState.User;
        Documento = user.FindFirst(c => c.Type == "Document")?.Value;
        bool IsUserContratante = authenticationState.User.IsInRole("UserContratante");

        var responseUsers = await repository.GetAsync<List<User>>("/api/accounts/nombre");
        if (!responseUsers.Error)
        {
            Users = responseUsers.Response;
        }

        if (IsUserContratante)
        {
            var responseContratante = await repository.GetAsync<List<Contratante>>("api/contratante");
            if (!responseContratante.Error)
            {
                Contratantes = responseContratante.Response;
            }
            contratante = Contratantes.FirstOrDefault(c => c.Document == Documento);
            PerfilUrl = $"perfilContratante/{contratante.Id}";
        }
        else
        {
            var responseRepresentante = await repository.GetAsync<List<Representante>>("api/representante");
            if (!responseRepresentante.Error)
            {
                Representantes = responseRepresentante.Response;
            }
            representante = Representantes.FirstOrDefault(c => c.Document == Documento);
            PerfilUrl = $"perfilRepresentante/{representante.Id}";
        }
    }
}
