@using Orquesta.Shared.Entities
@inject SweetAlertService swal

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>

<EditForm EditContext="editContext" OnValidSubmit="OnSubmit">
	<DataAnnotationsValidator />

	<style>
		.mb-3 {
			margin-bottom: 1rem !important;
			margin-left: 20px;
		}

		.card-body {
			flex: 1 1 auto;
			padding: 1rem 1rem;
			padding: 1rem 1rem;
			margin-bottom: 120px;
		}

	</style>

	<div class="card-body">
		<div class="mb-3">
			<label>Nombre</label>
			<div>
				<InputText  @bind-Value="Repertorio.Name" />
				<ValidationMessage For="@(()=>Repertorio.Name)" />
			</div>
		</div>

		<div class="mb-3">
			<label> Versión </label>
			<div>
				<InputText  @bind-Value="Repertorio.Version" />
				<ValidationMessage For="@(()=>Repertorio.Version)" />
			</div>
		</div>

		<div class="mb-3">
			<button class="btn btn-primary" type="submit">Guardar</button>
			<button class="btn btn-info" type="reset">Limpiar</button>
			<button class="btn btn-success" @onclick="ReturnAction">Regresar</button>
		</div>
	</div>

</EditForm>


@code {
	private EditContext editContext = null;
	protected override void OnInitialized()
	{
		editContext = new(Repertorio);
	}

	[EditorRequired]
	[Parameter]

	public Repertorio Repertorio { get; set; }

	[EditorRequired]
	[Parameter]

	public EventCallback OnSubmit { get; set; }

	[EditorRequired]
	[Parameter]
	public EventCallback ReturnAction { get; set; }

	public bool FormPostedSuccessfully { get; set; } = false;

	private async Task OnBeforeInternalNavigation(LocationChangingContext context)
	{
		var formularioFueEditado = editContext.IsModified();

		if (!formularioFueEditado)
		{
			return;
		}

		if (FormPostedSuccessfully)
		{
			return;
		}

		var resultado = await swal.FireAsync(new SweetAlertOptions
			{
				Title = "Confirmación",
				Text = "¿Deseas abandonar la página y perder los cambios?",
				Icon = SweetAlertIcon.Warning,
				ShowCancelButton = true
			});

		var confirmado = !string.IsNullOrEmpty(resultado.Value);

		if (confirmado)
		{
			return;
		}

		context.PreventNavigation();
	}
}
