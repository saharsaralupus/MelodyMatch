﻿@using Orquesta.Shared.Entities
@inject SweetAlertService swal

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>

<EditForm EditContext="editContext" OnValidSubmit="OnSubmit">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label>Nombre Agrupacion</label>
        <div>
            <InputText class="form-control" @bind-Value="AgrupacionSolista.Name" />
            <ValidationMessage For="@(()=>AgrupacionSolista.Name)" />
        </div>
    </div>
    <div class="mb-3">
        <label>Precio por hora</label>
        <div>
            <InputNumber class="form-control" @bind-Value="AgrupacionSolista.Price_Hour" />
            <ValidationMessage For="@(()=>AgrupacionSolista.Price_Hour)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Representante Id:</label>
        <div>
            <InputNumber class="form-control" @bind-Value="AgrupacionSolista.RepresentanteId" />
            <ValidationMessage For="@(()=>AgrupacionSolista.RepresentanteId)" />
        </div>
    </div>

    <button class="btn btn-primary" type="submit">Guardar</button>
    <button class="btn btn-info" type="reset">Limpiar</button>
    <button class="btn btn-success" @onclick="ReturnAction">Regresar</button>

</EditForm>

@code {

	private EditContext editContext = null;
	protected override void OnInitialized()
	{
		editContext = new(AgrupacionSolista);
	}

	[EditorRequired]
	[Parameter]

	public Agrupacion AgrupacionSolista { get; set; }

	[EditorRequired]
	[Parameter]

	public EventCallback OnSubmit { get; set; }

	[EditorRequired]
	[Parameter]
	public EventCallback ReturnAction { get; set; }

	public bool FormPostedSuccessfully { get; set; } = false;

	private async Task OnBeforeInternalNavigation(LocationChangingContext context)
	{
		var formularioFueEditado = editContext.IsModified();

		if (!formularioFueEditado)
		{
			return;
		}

		if (FormPostedSuccessfully)
		{
			return;
		}

		var resultado = await swal.FireAsync(new SweetAlertOptions
			{
				Title = "Confirmación",
				Text = "¿Deseas abandonar la página y perder los cambios?",
				Icon = SweetAlertIcon.Warning,
				ShowCancelButton = true
			});

		var confirmado = !string.IsNullOrEmpty(resultado.Value);

		if (confirmado)
		{
			return;
		}

		context.PreventNavigation();
	}

}
