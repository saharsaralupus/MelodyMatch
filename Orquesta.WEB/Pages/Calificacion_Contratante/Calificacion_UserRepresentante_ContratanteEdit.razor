@page "/historialCalificacionesRepresentante/edit/{Id:int}"
@using System.Net
@using CurrieTechnologies.Razor.SweetAlert2
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService

<h3>Editar</h3>

@if (calificacion_Contratante is null)
{
    <p>Cargando...</p>
}
else
{
    <Calificacion_UserRepresentante_ContratanteForm 
    @ref="calificacion_UserRepresentante_ContratanteForm" 
    Calificacion_Contratante="calificacion_Contratante" 
    OnSubmit="Editar" 
    ReturnAction="Return" />


}

@code {
    [Parameter]
    public int Id { get; set; }
    private Calificacion_Contratante calificacion_Contratante = new Calificacion_Contratante();
    private Calificacion_UserRepresentante_ContratanteForm calificacion_UserRepresentante_ContratanteForm;

    protected override async Task OnParametersSetAsync()
    {
        var responseHttp = await repository.GetAsync<Calificacion_Contratante>($"api/calificacion_contratante/{Id}");
        if (!responseHttp.Error)
        {
            calificacion_Contratante = responseHttp.Response;
            calificacion_UserRepresentante_ContratanteForm!.editContext = new EditContext(calificacion_Contratante);
        }
    }



    private async Task Editar()
    {
        var responseHttp = await repository.PutAsync("/api/calificacion_contratante", calificacion_Contratante);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
    await sweetAlertService.FireAsync("Error", message);
            return;
        }

    Return();
    var toast = sweetAlertService.Mixin(new SweetAlertOptions
    {
        Toast = true,
        Position = SweetAlertPosition.BottomEnd,
        ShowConfirmButton = true,
        Timer = 3000
    });
    await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Cambios guardados con éxito.");
}

        private void Return()
        {
        calificacion_UserRepresentante_ContratanteForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/");
        }
   
}
